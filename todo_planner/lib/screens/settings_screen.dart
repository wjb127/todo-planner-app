import 'package:flutter/material.dart';
import '../services/notification_service.dart';

class SettingsScreen extends StatefulWidget {
  const SettingsScreen({super.key});

  @override
  State<SettingsScreen> createState() => _SettingsScreenState();
}

class _SettingsScreenState extends State<SettingsScreen> {
  bool _notificationEnabled = false;
  bool _isLoading = true;

  @override
  void initState() {
    super.initState();
    _loadSettings();
  }

  Future<void> _loadSettings() async {
    final enabled = await NotificationService.isNotificationEnabled();
    setState(() {
      _notificationEnabled = enabled;
      _isLoading = false;
    });
  }

  Future<void> _toggleNotification(bool value) async {
    setState(() {
      _isLoading = true;
    });

    try {
      if (value) {
        await NotificationService.scheduleDailyNotification();
        _showSnackBar('Îß§Ïùº 8Ïãú ÏïåÎ¶ºÏù¥ ÏÑ§Ï†ïÎêòÏóàÏäµÎãàÎã§! üîî');
      } else {
        await NotificationService.cancelDailyNotification();
        _showSnackBar('ÏïåÎ¶ºÏù¥ Ìï¥Ï†úÎêòÏóàÏäµÎãàÎã§');
      }
      
      setState(() {
        _notificationEnabled = value;
      });
    } catch (e) {
      _showSnackBar('ÏÑ§Ï†ï Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§: $e', isError: true);
    } finally {
      setState(() {
        _isLoading = false;
      });
    }
  }

  void _showSnackBar(String message, {bool isError = false}) {
    if (mounted) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text(message),
          backgroundColor: isError ? Colors.red.shade600 : Colors.green.shade600,
          behavior: SnackBarBehavior.floating,
          shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
          margin: const EdgeInsets.all(16),
        ),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text(
          'ÏÑ§Ï†ï',
          style: TextStyle(
            fontWeight: FontWeight.bold,
            color: Colors.white,
          ),
        ),
        backgroundColor: Theme.of(context).colorScheme.primary,
        foregroundColor: Colors.white,
        elevation: 0,
      ),
      body: Container(
        decoration: BoxDecoration(
          gradient: LinearGradient(
            begin: Alignment.topCenter,
            end: Alignment.bottomCenter,
            colors: [
              Theme.of(context).colorScheme.primary,
              Theme.of(context).colorScheme.primary.withOpacity(0.8),
              Colors.grey.shade50,
            ],
            stops: const [0.0, 0.3, 1.0],
          ),
        ),
        child: SafeArea(
          child: _isLoading
              ? const Center(child: CircularProgressIndicator(color: Colors.white))
              : ListView(
                  padding: const EdgeInsets.all(16),
                  children: [
                    // ÏïåÎ¶º ÏÑ§Ï†ï ÏÑπÏÖò
                    Container(
                      padding: const EdgeInsets.all(20),
                      decoration: BoxDecoration(
                        color: Colors.white,
                        borderRadius: BorderRadius.circular(20),
                        boxShadow: [
                          BoxShadow(
                            color: Colors.black.withOpacity(0.1),
                            blurRadius: 10,
                            offset: const Offset(0, 4),
                          ),
                        ],
                      ),
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Row(
                            children: [
                              Container(
                                padding: const EdgeInsets.all(8),
                                decoration: BoxDecoration(
                                  color: Theme.of(context).colorScheme.primary.withOpacity(0.1),
                                  borderRadius: BorderRadius.circular(12),
                                ),
                                child: Icon(
                                  Icons.notifications_rounded,
                                  color: Theme.of(context).colorScheme.primary,
                                  size: 20,
                                ),
                              ),
                              const SizedBox(width: 12),
                              const Text(
                                'ÏïåÎ¶º ÏÑ§Ï†ï',
                                style: TextStyle(
                                  fontSize: 18,
                                  fontWeight: FontWeight.bold,
                                ),
                              ),
                            ],
                          ),
                          const SizedBox(height: 20),
                          
                          // Îß§Ïùº 8Ïãú ÏïåÎ¶º ÏÑ§Ï†ï
                          Container(
                            padding: const EdgeInsets.all(16),
                            decoration: BoxDecoration(
                              color: Colors.grey.shade50,
                              borderRadius: BorderRadius.circular(16),
                              border: Border.all(color: Colors.grey.shade200),
                            ),
                            child: Row(
                              children: [
                                Expanded(
                                  child: Column(
                                    crossAxisAlignment: CrossAxisAlignment.start,
                                    children: [
                                      const Text(
                                        'Îß§Ïùº 8Ïãú ÏäµÍ¥Ä ÏïåÎ¶º',
                                        style: TextStyle(
                                          fontSize: 16,
                                          fontWeight: FontWeight.w600,
                                        ),
                                      ),
                                      const SizedBox(height: 4),
                                      Text(
                                        'Îß§Ïùº Ïò§Ï†Ñ 8ÏãúÏóê ÏäµÍ¥Ä Ï≤¥ÌÅ¨Î•º ÏïåÎ†§ÎìúÎ†§Ïöî',
                                        style: TextStyle(
                                          fontSize: 14,
                                          color: Colors.grey.shade600,
                                        ),
                                      ),
                                    ],
                                  ),
                                ),
                                Switch(
                                  value: _notificationEnabled,
                                  onChanged: _toggleNotification,
                                  activeColor: Theme.of(context).colorScheme.primary,
                                ),
                              ],
                            ),
                          ),
                          
                          if (_notificationEnabled) ...[
                            const SizedBox(height: 16),
                            Container(
                              padding: const EdgeInsets.all(12),
                              decoration: BoxDecoration(
                                color: Colors.blue.shade50,
                                borderRadius: BorderRadius.circular(12),
                                border: Border.all(color: Colors.blue.shade200),
                              ),
                              child: Row(
                                children: [
                                  Icon(
                                    Icons.info_outline_rounded,
                                    color: Colors.blue.shade600,
                                    size: 20,
                                  ),
                                  const SizedBox(width: 8),
                                  Expanded(
                                    child: Text(
                                      'ÏïåÎ¶ºÏù¥ ÌôúÏÑ±ÌôîÎêòÏóàÏäµÎãàÎã§. Îß§Ïùº Îã§ÏñëÌïú ÎèôÍ∏∞Î∂ÄÏó¨ Î©îÏãúÏßÄÎ•º Î∞õÏïÑÎ≥¥ÏÑ∏Ïöî!',
                                      style: TextStyle(
                                        fontSize: 12,
                                        color: Colors.blue.shade700,
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ),
                            const SizedBox(height: 12),
                            SizedBox(
                              width: double.infinity,
                              child: ElevatedButton.icon(
                                onPressed: () async {
                                  await NotificationService.sendTestNotification();
                                  if (mounted) {
                                    ScaffoldMessenger.of(context).showSnackBar(
                                      SnackBar(
                                        content: const Text('ÌÖåÏä§Ìä∏ ÏïåÎ¶ºÏùÑ Î≥¥ÎÉàÏäµÎãàÎã§!'),
                                        backgroundColor: Colors.green.shade600,
                                        behavior: SnackBarBehavior.floating,
                                        shape: RoundedRectangleBorder(
                                          borderRadius: BorderRadius.circular(12),
                                        ),
                                        margin: const EdgeInsets.all(16),
                                      ),
                                    );
                                  }
                                },
                                icon: const Icon(Icons.send_rounded),
                                label: const Text('ÌÖåÏä§Ìä∏ ÏïåÎ¶º Î≥¥ÎÇ¥Í∏∞'),
                                style: ElevatedButton.styleFrom(
                                  backgroundColor: Theme.of(context).colorScheme.primary,
                                  foregroundColor: Colors.white,
                                  padding: const EdgeInsets.symmetric(vertical: 12),
                                  shape: RoundedRectangleBorder(
                                    borderRadius: BorderRadius.circular(12),
                                  ),
                                ),
                              ),
                            ),
                          ],
                        ],
                      ),
                    ),
                    
                    const SizedBox(height: 20),
                    
                    // Ïï± Ï†ïÎ≥¥ ÏÑπÏÖò
                    Container(
                      padding: const EdgeInsets.all(20),
                      decoration: BoxDecoration(
                        color: Colors.white,
                        borderRadius: BorderRadius.circular(20),
                        boxShadow: [
                          BoxShadow(
                            color: Colors.black.withOpacity(0.1),
                            blurRadius: 10,
                            offset: const Offset(0, 4),
                          ),
                        ],
                      ),
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Row(
                            children: [
                              Container(
                                padding: const EdgeInsets.all(8),
                                decoration: BoxDecoration(
                                  color: Colors.grey.shade100,
                                  borderRadius: BorderRadius.circular(12),
                                ),
                                child: Icon(
                                  Icons.info_rounded,
                                  color: Colors.grey.shade600,
                                  size: 20,
                                ),
                              ),
                              const SizedBox(width: 12),
                              const Text(
                                'Ïï± Ï†ïÎ≥¥',
                                style: TextStyle(
                                  fontSize: 18,
                                  fontWeight: FontWeight.bold,
                                ),
                              ),
                            ],
                          ),
                          const SizedBox(height: 20),
                          
                          _buildInfoRow('Ïï± Ïù¥Î¶Ñ', 'ÏäµÍ¥ÄÎ©îÏù¥Ïª§ (Habit Maker)'),
                          _buildInfoRow('Î≤ÑÏ†Ñ', '1.0.0'),
                          _buildInfoRow('Í∞úÎ∞úÏûê', 'Habit Maker Team'),
                          _buildInfoRow('ÏÑ§Î™Ö', 'Îß§Ïùº Î∞òÎ≥µÌïòÎäî ÏäµÍ¥ÄÏùÑ ÎßåÎì§Í≥† Í¥ÄÎ¶¨ÌïòÎäî Ïï±'),
                        ],
                      ),
                    ),
                    
                    const SizedBox(height: 20),
                    
                    // ÎèÑÏõÄÎßê ÏÑπÏÖò
                    Container(
                      padding: const EdgeInsets.all(20),
                      decoration: BoxDecoration(
                        color: Colors.white,
                        borderRadius: BorderRadius.circular(20),
                        boxShadow: [
                          BoxShadow(
                            color: Colors.black.withOpacity(0.1),
                            blurRadius: 10,
                            offset: const Offset(0, 4),
                          ),
                        ],
                      ),
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Row(
                            children: [
                              Container(
                                padding: const EdgeInsets.all(8),
                                decoration: BoxDecoration(
                                  color: Colors.orange.shade100,
                                  borderRadius: BorderRadius.circular(12),
                                ),
                                child: Icon(
                                  Icons.help_outline_rounded,
                                  color: Colors.orange.shade600,
                                  size: 20,
                                ),
                              ),
                              const SizedBox(width: 12),
                              const Text(
                                'ÏÇ¨Ïö©Î≤ï',
                                style: TextStyle(
                                  fontSize: 18,
                                  fontWeight: FontWeight.bold,
                                ),
                              ),
                            ],
                          ),
                          const SizedBox(height: 16),
                          
                          _buildHelpItem('1. Î∞òÎ≥µ ÏäµÍ¥Ä ÌÖúÌîåÎ¶ø', 'Îß§Ïùº Î∞òÎ≥µÌï† ÏäµÍ¥ÄÎì§ÏùÑ ÏµúÎåÄ 30Í∞úÍπåÏßÄ ÏÑ§Ï†ïÌïòÏÑ∏Ïöî'),
                          _buildHelpItem('2. ÌÖúÌîåÎ¶ø Ï†ÅÏö©', '"Ïò§ÎäòÎ∂ÄÌÑ∞ ÏäµÍ¥Ä ÌÖúÌîåÎ¶ø Ï†ÅÏö©ÌïòÍ∏∞" Î≤ÑÌäºÏùÑ ÎàåÎü¨ Ï†ÅÏö©ÌïòÏÑ∏Ïöî'),
                          _buildHelpItem('3. ÏùºÏùº Ï≤¥ÌÅ¨', 'Îß§Ïùº ÏäµÍ¥ÄÏùÑ Ï≤¥ÌÅ¨ÌïòÍ≥† ÏßÑÌñâÎ•†ÏùÑ ÌôïÏù∏ÌïòÏÑ∏Ïöî'),
                          _buildHelpItem('4. ÌÜµÍ≥Ñ ÌôïÏù∏', 'ÏôÑÎ£åÏú®Í≥º Ïπ≠Ìò∏Î•º ÌÜµÌï¥ ÏÑ±Í≥ºÎ•º ÌôïÏù∏ÌïòÏÑ∏Ïöî'),
                        ],
                      ),
                    ),
                  ],
                ),
        ),
      ),
    );
  }

  Widget _buildInfoRow(String label, String value) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          SizedBox(
            width: 80,
            child: Text(
              label,
              style: TextStyle(
                fontSize: 14,
                color: Colors.grey.shade600,
                fontWeight: FontWeight.w500,
              ),
            ),
          ),
          Expanded(
            child: Text(
              value,
              style: const TextStyle(
                fontSize: 14,
                fontWeight: FontWeight.w600,
              ),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildHelpItem(String title, String description) {
    return Padding(
      padding: const EdgeInsets.only(bottom: 12),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            title,
            style: const TextStyle(
              fontSize: 14,
              fontWeight: FontWeight.w600,
            ),
          ),
          const SizedBox(height: 4),
          Text(
            description,
            style: TextStyle(
              fontSize: 13,
              color: Colors.grey.shade600,
            ),
          ),
        ],
      ),
    );
  }
} 